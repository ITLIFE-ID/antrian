version: '3.9'

services:
  # x-prefixed services are abstract services for defining shared configurations,
  # so you don't run them directly.

  web: 
    build:       
      context: ./
      dockerfile: docker/web/Dockerfile
    image: antrian-web
    ports: 
      - "80:80" 
    depends_on: 
      - app 

  xapp: &app
    build:      
      context: ./
      dockerfile: Dockerfile
      args:
        RUBY_VERSION: '3.1.2'
        NODE_MAJOR: '18'
        YARN_VERSION: '1.22.19'
        BUNDLER_VERSION: '2.3.25'
    image: antrian-app:1 # increment this tag when you made changes to the dev image.
    tmpfs:
      - /tmp

  xbackend: &backend
    <<: *app
    stdin_open: true
    tty: true     
    environment:      
      DB_USERNAME: otoraja
      DB_PASSWORD: password
      DB_HOST: db
      DB_PORT: 5432
      NODE_ENV: development
      RAILS_ENV: ${RAILS_ENV:-development}
      SECRET_KEY_BASE: c037a2dfb804223ce3cb8fc92e4412c1a11a3c9b075508628f84500fce9acc701570c8c5250d9cea6d1815243a232aea9ca1762abd17ee6c38522ccd64bfedd2            
      RAILS_MASTER_KEY: 53d36b8af6d489fe948cefa745f14e2f                      
    volumes:
      - .:/app:cached
      - rails_cache:/app/tmp/cache:cached
      - bundle:/usr/local/bundle:cached
      - node_modules:/app/node_modules:cached
      - packs:/app/public/packs:cached
      - assets:/app/public/assets:cached
      - log:/app/log:cached
      - storage:/app/storage:cached     
    depends_on: &backend_deps
      db:
        condition: service_healthy

  runner:
    <<: *backend
    command: /bin/bash
    ports:
      - '3002:3002'

  app:
    <<: *backend
    command: /bin/sh -c "rm -f tmp/pids/server.pid && bundle exec rails server -b '0.0.0.0' -p 3000"
    ports:
      - '3000:3000'
  
  db:
    image: postgres:latest
    volumes:
      - .dockerdev/.psqlrc:/root/.psqlrc:ro
      - postgres:/var/lib/postgresql/data
      - ./log:/root/log
    environment:
      - PSQL_HISTFILE=/root/log/.psql_history
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s  

  mqtt:
    image: eclipse-mosquitto:latest        
    ports:
      - 1883:1883
      - 9001:9001

volumes:
  mysqldata:  
  bundle:
  node_modules:
  rails_cache:
  packs:
  assets:
  log:
  storage:
  postgres: